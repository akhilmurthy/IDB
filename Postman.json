{
	"info": {
		"name": "Tests",
		"_postman_id": "5f9a8fa4-6e96-6004-b9cb-054045010d12",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "overwatchglamour.me/api/heroes/2",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"verify hero_name\"] = data.hero_name === \"Bastion\";",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify hero_id\"] = data.hero_id === 2;",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify role\"] = data.role === \"defense\";",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "overwatchglamour.me/api/heroes/2",
					"host": [
						"overwatchglamour",
						"me"
					],
					"path": [
						"api",
						"heroes",
						"2"
					]
				},
				"description": "Specific Hero Tests"
			},
			"response": []
		},
		{
			"name": "overwatchglamour.me/api/heroes",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"verify hero_name\"] = data[17].hero_name === \"Tracer\";",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify hero_id\"] = data[17].hero_id === 18;",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify role\"] = data[17].role === \"offense\";",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "overwatchglamour.me/api/heroes",
					"host": [
						"overwatchglamour",
						"me"
					],
					"path": [
						"api",
						"heroes"
					]
				},
				"description": "General Hero Tests"
			},
			"response": []
		},
		{
			"name": "overwatchglamour.me/api/players/7",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"verify player_name\"] = data.top_player_name === \"Josiah-11900\";",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify player_id\"] = data.top_player_id === 7;",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify player level\"] = data.level === 591;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "overwatchglamour.me/api/players/7",
					"host": [
						"overwatchglamour",
						"me"
					],
					"path": [
						"api",
						"players",
						"7"
					]
				},
				"description": "Specific Players Tests"
			},
			"response": []
		},
		{
			"name": "overwatchglamour.me/api/players",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"verify player_name\"] = data[0].top_player_name === \"Rexarthur-1739\";",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify player_id\"] = data[0].top_player_id === 1;",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify player level\"] = data[0].level === 777;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "overwatchglamour.me/api/players",
					"host": [
						"overwatchglamour",
						"me"
					],
					"path": [
						"api",
						"players"
					]
				},
				"description": "General Players Tests"
			},
			"response": []
		},
		{
			"name": "overwatchglamour.me/api/achievements",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"verify ach_name\"] = data[0].achievement_name === \"Level 10\";",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify ach_id\"] = data[0].achievement_id === 1;",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify reward_name\"] = data[0].reward_name === \"Forge Onward\";"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "overwatchglamour.me/api/achievements",
					"host": [
						"overwatchglamour",
						"me"
					],
					"path": [
						"api",
						"achievements"
					]
				},
				"description": "General Achievements Tests"
			},
			"response": []
		},
		{
			"name": "overwatchglamour.me/api/achievements/7",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"verify ach_name\"] = data.achievement_name === \"Slice and Dice\";",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify ach_id\"] = data.achievement_id === 7;",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify reward_name\"] = data.reward_name === \"Cute\";"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "overwatchglamour.me/api/achievements/7",
					"host": [
						"overwatchglamour",
						"me"
					],
					"path": [
						"api",
						"achievements",
						"7"
					]
				},
				"description": "Specific Achievements Tests"
			},
			"response": []
		},
		{
			"name": "overwatchglamour.me/api/events",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"verify event_name\"] = data[0].event_name === \"Summer Games 2016\";",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify event_id\"] = data[0].event_id === 1;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "overwatchglamour.me/api/events",
					"host": [
						"overwatchglamour",
						"me"
					],
					"path": [
						"api",
						"events"
					]
				},
				"description": "General Events Tests"
			},
			"response": []
		},
		{
			"name": "overwatchglamour.me/api/events/2",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"verify event_name\"] = data.event_name === \"Halloween Terror\";",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify event_id\"] = data.event_id === 2;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "overwatchglamour.me/api/events/2",
					"host": [
						"overwatchglamour",
						"me"
					],
					"path": [
						"api",
						"events",
						"2"
					]
				},
				"description": "Specific Events Tests"
			},
			"response": []
		},
		{
			"name": "overwatchglamour.me/api/skins/1224",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"verify skin_name\"] = data.skin_name === \"Citrine\";",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify skin_id\"] = data.skin_id === 1224;",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify skin_quality\"] = data.quality === \"rare\";"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "overwatchglamour.me/api/skins/1224",
					"host": [
						"overwatchglamour",
						"me"
					],
					"path": [
						"api",
						"skins",
						"1224"
					]
				},
				"description": "Specific Skins Tests"
			},
			"response": []
		},
		{
			"name": "overwatchglamour.me/api/skins",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"verify skin_name\"] = data[0].skin_name === \"Classic\";",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify skin_id\"] = data[0].skin_id === 1223;",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify skin_quality\"] = data[0].quality === \"common\";"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "overwatchglamour.me/api/skins",
					"host": [
						"overwatchglamour",
						"me"
					],
					"path": [
						"api",
						"skins"
					]
				},
				"description": "General Skins Tests"
			},
			"response": []
		},
		{
			"name": "overwatchglamour.me/api/items",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"verify item_name\"] = data[0].item_name === \"Logo\";",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify item_id\"] = data[0].item_id === 1;",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify item_type\"] = data[0].item_type === \"spray\";"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "overwatchglamour.me/api/items",
					"host": [
						"overwatchglamour",
						"me"
					],
					"path": [
						"api",
						"items"
					]
				},
				"description": "General Items Tests"
			},
			"response": []
		},
		{
			"name": "overwatchglamour.me/api/items/6",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"verify item_name\"] = data.item_name === \"Dance\";",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify item_id\"] = data.item_id === 6;",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"verify item_type\"] = data.item_type === \"spray\";"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "overwatchglamour.me/api/items/6",
					"host": [
						"overwatchglamour",
						"me"
					],
					"path": [
						"api",
						"items",
						"6"
					]
				},
				"description": "Specific Items Tests"
			},
			"response": []
		}
	]
}